$date
	Wed Oct  3 10:30:53 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALU $end
$var wire 1 ! carryout $end
$var wire 3 " command [2:0] $end
$var wire 32 # operandA [31:0] $end
$var wire 32 $ operandB [31:0] $end
$var wire 1 % overflow $end
$var wire 32 & result [31:0] $end
$var wire 1 ' zero $end
$upscope $end
$scope module ALU_last $end
$var wire 1 ( A $end
$var wire 1 ) B $end
$var wire 3 * S [0:2] $end
$var wire 1 + carryin $end
$var wire 1 , overflow $end
$var wire 1 - out $end
$var wire 1 . modB $end
$var wire 1 / carryout $end
$var wire 1 0 as $end
$var wire 1 1 SLT $end
$var wire 8 2 I [0:7] $end
$scope module anush $end
$var wire 1 ) A $end
$var wire 1 3 B $end
$var wire 1 . out $end
$upscope $end
$scope module combo $end
$var wire 1 ( A $end
$var wire 1 ) B $end
$var wire 1 4 out $end
$upscope $end
$scope module elonMux $end
$var wire 8 5 I [7:0] $end
$var wire 3 6 S [2:0] $end
$var wire 1 - out $end
$upscope $end
$scope module houstonWeHaveAProblem $end
$var wire 1 + A $end
$var wire 1 , out $end
$var wire 1 / B $end
$upscope $end
$scope module iAmYourFather $end
$var wire 1 , A $end
$var wire 1 1 out $end
$var wire 1 0 B $end
$upscope $end
$scope module lauren $end
$var wire 1 ( A $end
$var wire 1 ) B $end
$var wire 1 7 out $end
$upscope $end
$scope module nalgene $end
$var wire 1 ( A $end
$var wire 1 ) B $end
$var wire 1 8 out $end
$upscope $end
$scope module nombo $end
$var wire 1 ( A $end
$var wire 1 ) B $end
$var wire 1 9 out $end
$upscope $end
$scope module purpoise $end
$var wire 1 ( A $end
$var wire 1 ) B $end
$var wire 1 : out $end
$upscope $end
$scope module will $end
$var wire 1 ( A $end
$var wire 1 . B $end
$var wire 1 + carryin $end
$var wire 1 / carryout $end
$var wire 1 ; out1 $end
$var wire 1 < out2 $end
$var wire 1 = out3 $end
$var wire 1 0 sum $end
$upscope $end
$upscope $end
$scope module add_sub_last $end
$var wire 1 > A $end
$var wire 1 ? B $end
$var wire 1 @ carryin $end
$var wire 1 A carryout $end
$var wire 1 B out1 $end
$var wire 1 C out2 $end
$var wire 1 D out3 $end
$var wire 1 E overflow $end
$var wire 1 F sum $end
$upscope $end
$scope module testAlu $end
$var wire 1 G out $end
$var wire 1 H carryout $end
$var wire 8 I IF [7:0] $end
$var reg 1 J A $end
$var reg 1 K B $end
$var reg 3 L S [2:0] $end
$var reg 1 M carryin $end
$scope module alu $end
$var wire 1 J A $end
$var wire 1 K B $end
$var wire 8 N IF [7:0] $end
$var wire 3 O S [0:2] $end
$var wire 1 M carryin $end
$var wire 1 G out $end
$var wire 1 P modB $end
$var wire 1 H carryout $end
$var wire 1 Q as $end
$var wire 8 R I [7:0] $end
$scope module anush $end
$var wire 1 K A $end
$var wire 1 S B $end
$var wire 1 P out $end
$upscope $end
$scope module combo $end
$var wire 1 J A $end
$var wire 1 K B $end
$var wire 1 T out $end
$upscope $end
$scope module elonMux $end
$var wire 8 U I [7:0] $end
$var wire 3 V S [2:0] $end
$var wire 1 G out $end
$upscope $end
$scope module lauren $end
$var wire 1 J A $end
$var wire 1 K B $end
$var wire 1 W out $end
$upscope $end
$scope module nalgene $end
$var wire 1 J A $end
$var wire 1 K B $end
$var wire 1 X out $end
$upscope $end
$scope module nombo $end
$var wire 1 J A $end
$var wire 1 K B $end
$var wire 1 Y out $end
$upscope $end
$scope module purpoise $end
$var wire 1 J A $end
$var wire 1 K B $end
$var wire 1 Z out $end
$upscope $end
$scope module will $end
$var wire 1 J A $end
$var wire 1 P B $end
$var wire 1 M carryin $end
$var wire 1 H carryout $end
$var wire 1 [ out1 $end
$var wire 1 \ out2 $end
$var wire 1 ] out3 $end
$var wire 1 Q sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x]
x\
x[
xZ
xY
xX
xW
b0 V
bx0xxx U
xT
0S
bx0xxx R
xQ
xP
b0 O
bx0xxx N
0M
b0 L
1K
1J
bx0xxx I
xH
xG
xF
xE
xD
xC
xB
xA
z@
z?
z>
x=
x<
x;
x:
x9
x8
x7
bz 6
bx0xxxx 5
x4
z3
bx0xxxx 2
x1
x0
x/
x.
x-
x,
z+
bz *
z)
z(
z'
bz &
z%
bz $
bz #
bz "
z!
$end
#10000
1P
bx00xx I
bx00xx N
bx00xx R
bx00xx U
0W
#20000
0Y
bx00x00xx I
bx00x00xx N
bx00x00xx R
bx00x00xx U
0X
#30000
0\
1Z
b100100xx I
b100100xx N
b100100xx R
b100100xx U
1T
#40000
0[
1]
#70000
0G
b10010000 I
b10010000 N
b10010000 R
b10010000 U
0Q
1H
#100000000
