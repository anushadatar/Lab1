$date
	Thu Oct  4 16:30:03 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module add_sub_last $end
$var wire 1 ! A $end
$var wire 1 " B $end
$var wire 1 # carryin $end
$var wire 1 $ carryout $end
$var wire 1 % out1 $end
$var wire 1 & out2 $end
$var wire 1 ' out3 $end
$var wire 1 ( overflow $end
$var wire 1 ) sum $end
$upscope $end
$scope module testAlu $end
$var wire 1 * zero $end
$var wire 32 + result [31:0] $end
$var wire 1 , overflow $end
$var wire 1 - carryout $end
$var reg 32 . A [31:0] $end
$var reg 32 / B [31:0] $end
$var reg 3 0 command [2:0] $end
$scope module alu $end
$var wire 32 1 A [31:0] $end
$var wire 32 2 B [31:0] $end
$var wire 3 3 command [2:0] $end
$var wire 1 * zero $end
$var wire 1 4 slt $end
$var wire 32 5 result [31:0] $end
$var wire 1 , overflow $end
$var wire 31 6 cout [30:0] $end
$var wire 1 - carryout $end
$scope module alu0 $end
$var wire 1 7 A $end
$var wire 1 8 B $end
$var wire 3 9 S [0:2] $end
$var wire 1 : carryin $end
$var wire 1 ; out $end
$var wire 1 < modB $end
$var wire 1 = carryout $end
$var wire 1 > addORsub $end
$var wire 8 ? I [7:0] $end
$scope module addsub $end
$var wire 1 7 A $end
$var wire 1 : carryin $end
$var wire 1 = carryout $end
$var wire 1 @ out1 $end
$var wire 1 A out2 $end
$var wire 1 B out3 $end
$var wire 1 > sum $end
$var wire 1 < B $end
$upscope $end
$scope module andgate $end
$var wire 1 7 A $end
$var wire 1 8 B $end
$var wire 1 C out $end
$upscope $end
$scope module mux $end
$var wire 8 D I [7:0] $end
$var wire 3 E S [2:0] $end
$var wire 1 ; out $end
$upscope $end
$scope module nandgate $end
$var wire 1 7 A $end
$var wire 1 8 B $end
$var wire 1 F out $end
$upscope $end
$scope module norgate $end
$var wire 1 7 A $end
$var wire 1 8 B $end
$var wire 1 G out $end
$upscope $end
$scope module orgate $end
$var wire 1 7 A $end
$var wire 1 8 B $end
$var wire 1 H out $end
$upscope $end
$scope module xorgate $end
$var wire 1 8 A $end
$var wire 1 I B $end
$var wire 1 < out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 7 A $end
$var wire 1 8 B $end
$var wire 1 J out $end
$upscope $end
$upscope $end
$scope module alu1 $end
$var wire 1 K A $end
$var wire 1 L B $end
$var wire 3 M S [0:2] $end
$var wire 1 N carryin $end
$var wire 1 O out $end
$var wire 1 P modB $end
$var wire 1 Q carryout $end
$var wire 1 R addORsub $end
$var wire 8 S I [7:0] $end
$scope module addsub $end
$var wire 1 K A $end
$var wire 1 N carryin $end
$var wire 1 Q carryout $end
$var wire 1 T out1 $end
$var wire 1 U out2 $end
$var wire 1 V out3 $end
$var wire 1 R sum $end
$var wire 1 P B $end
$upscope $end
$scope module andgate $end
$var wire 1 K A $end
$var wire 1 L B $end
$var wire 1 W out $end
$upscope $end
$scope module mux $end
$var wire 8 X I [7:0] $end
$var wire 3 Y S [2:0] $end
$var wire 1 O out $end
$upscope $end
$scope module nandgate $end
$var wire 1 K A $end
$var wire 1 L B $end
$var wire 1 Z out $end
$upscope $end
$scope module norgate $end
$var wire 1 K A $end
$var wire 1 L B $end
$var wire 1 [ out $end
$upscope $end
$scope module orgate $end
$var wire 1 K A $end
$var wire 1 L B $end
$var wire 1 \ out $end
$upscope $end
$scope module xorgate $end
$var wire 1 L A $end
$var wire 1 ] B $end
$var wire 1 P out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 K A $end
$var wire 1 L B $end
$var wire 1 ^ out $end
$upscope $end
$upscope $end
$scope module alu10 $end
$var wire 1 _ A $end
$var wire 1 ` B $end
$var wire 3 a S [0:2] $end
$var wire 1 b carryin $end
$var wire 1 c out $end
$var wire 1 d modB $end
$var wire 1 e carryout $end
$var wire 1 f addORsub $end
$var wire 8 g I [7:0] $end
$scope module addsub $end
$var wire 1 _ A $end
$var wire 1 b carryin $end
$var wire 1 e carryout $end
$var wire 1 h out1 $end
$var wire 1 i out2 $end
$var wire 1 j out3 $end
$var wire 1 f sum $end
$var wire 1 d B $end
$upscope $end
$scope module andgate $end
$var wire 1 _ A $end
$var wire 1 ` B $end
$var wire 1 k out $end
$upscope $end
$scope module mux $end
$var wire 8 l I [7:0] $end
$var wire 3 m S [2:0] $end
$var wire 1 c out $end
$upscope $end
$scope module nandgate $end
$var wire 1 _ A $end
$var wire 1 ` B $end
$var wire 1 n out $end
$upscope $end
$scope module norgate $end
$var wire 1 _ A $end
$var wire 1 ` B $end
$var wire 1 o out $end
$upscope $end
$scope module orgate $end
$var wire 1 _ A $end
$var wire 1 ` B $end
$var wire 1 p out $end
$upscope $end
$scope module xorgate $end
$var wire 1 ` A $end
$var wire 1 q B $end
$var wire 1 d out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 _ A $end
$var wire 1 ` B $end
$var wire 1 r out $end
$upscope $end
$upscope $end
$scope module alu11 $end
$var wire 1 s A $end
$var wire 1 t B $end
$var wire 3 u S [0:2] $end
$var wire 1 v carryin $end
$var wire 1 w out $end
$var wire 1 x modB $end
$var wire 1 y carryout $end
$var wire 1 z addORsub $end
$var wire 8 { I [7:0] $end
$scope module addsub $end
$var wire 1 s A $end
$var wire 1 v carryin $end
$var wire 1 y carryout $end
$var wire 1 | out1 $end
$var wire 1 } out2 $end
$var wire 1 ~ out3 $end
$var wire 1 z sum $end
$var wire 1 x B $end
$upscope $end
$scope module andgate $end
$var wire 1 s A $end
$var wire 1 t B $end
$var wire 1 !" out $end
$upscope $end
$scope module mux $end
$var wire 8 "" I [7:0] $end
$var wire 3 #" S [2:0] $end
$var wire 1 w out $end
$upscope $end
$scope module nandgate $end
$var wire 1 s A $end
$var wire 1 t B $end
$var wire 1 $" out $end
$upscope $end
$scope module norgate $end
$var wire 1 s A $end
$var wire 1 t B $end
$var wire 1 %" out $end
$upscope $end
$scope module orgate $end
$var wire 1 s A $end
$var wire 1 t B $end
$var wire 1 &" out $end
$upscope $end
$scope module xorgate $end
$var wire 1 t A $end
$var wire 1 '" B $end
$var wire 1 x out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 s A $end
$var wire 1 t B $end
$var wire 1 (" out $end
$upscope $end
$upscope $end
$scope module alu12 $end
$var wire 1 )" A $end
$var wire 1 *" B $end
$var wire 3 +" S [0:2] $end
$var wire 1 ," carryin $end
$var wire 1 -" out $end
$var wire 1 ." modB $end
$var wire 1 /" carryout $end
$var wire 1 0" addORsub $end
$var wire 8 1" I [7:0] $end
$scope module addsub $end
$var wire 1 )" A $end
$var wire 1 ," carryin $end
$var wire 1 /" carryout $end
$var wire 1 2" out1 $end
$var wire 1 3" out2 $end
$var wire 1 4" out3 $end
$var wire 1 0" sum $end
$var wire 1 ." B $end
$upscope $end
$scope module andgate $end
$var wire 1 )" A $end
$var wire 1 *" B $end
$var wire 1 5" out $end
$upscope $end
$scope module mux $end
$var wire 8 6" I [7:0] $end
$var wire 3 7" S [2:0] $end
$var wire 1 -" out $end
$upscope $end
$scope module nandgate $end
$var wire 1 )" A $end
$var wire 1 *" B $end
$var wire 1 8" out $end
$upscope $end
$scope module norgate $end
$var wire 1 )" A $end
$var wire 1 *" B $end
$var wire 1 9" out $end
$upscope $end
$scope module orgate $end
$var wire 1 )" A $end
$var wire 1 *" B $end
$var wire 1 :" out $end
$upscope $end
$scope module xorgate $end
$var wire 1 *" A $end
$var wire 1 ;" B $end
$var wire 1 ." out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 )" A $end
$var wire 1 *" B $end
$var wire 1 <" out $end
$upscope $end
$upscope $end
$scope module alu13 $end
$var wire 1 =" A $end
$var wire 1 >" B $end
$var wire 3 ?" S [0:2] $end
$var wire 1 @" carryin $end
$var wire 1 A" out $end
$var wire 1 B" modB $end
$var wire 1 C" carryout $end
$var wire 1 D" addORsub $end
$var wire 8 E" I [7:0] $end
$scope module addsub $end
$var wire 1 =" A $end
$var wire 1 @" carryin $end
$var wire 1 C" carryout $end
$var wire 1 F" out1 $end
$var wire 1 G" out2 $end
$var wire 1 H" out3 $end
$var wire 1 D" sum $end
$var wire 1 B" B $end
$upscope $end
$scope module andgate $end
$var wire 1 =" A $end
$var wire 1 >" B $end
$var wire 1 I" out $end
$upscope $end
$scope module mux $end
$var wire 8 J" I [7:0] $end
$var wire 3 K" S [2:0] $end
$var wire 1 A" out $end
$upscope $end
$scope module nandgate $end
$var wire 1 =" A $end
$var wire 1 >" B $end
$var wire 1 L" out $end
$upscope $end
$scope module norgate $end
$var wire 1 =" A $end
$var wire 1 >" B $end
$var wire 1 M" out $end
$upscope $end
$scope module orgate $end
$var wire 1 =" A $end
$var wire 1 >" B $end
$var wire 1 N" out $end
$upscope $end
$scope module xorgate $end
$var wire 1 >" A $end
$var wire 1 O" B $end
$var wire 1 B" out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 =" A $end
$var wire 1 >" B $end
$var wire 1 P" out $end
$upscope $end
$upscope $end
$scope module alu14 $end
$var wire 1 Q" A $end
$var wire 1 R" B $end
$var wire 3 S" S [0:2] $end
$var wire 1 T" carryin $end
$var wire 1 U" out $end
$var wire 1 V" modB $end
$var wire 1 W" carryout $end
$var wire 1 X" addORsub $end
$var wire 8 Y" I [7:0] $end
$scope module addsub $end
$var wire 1 Q" A $end
$var wire 1 T" carryin $end
$var wire 1 W" carryout $end
$var wire 1 Z" out1 $end
$var wire 1 [" out2 $end
$var wire 1 \" out3 $end
$var wire 1 X" sum $end
$var wire 1 V" B $end
$upscope $end
$scope module andgate $end
$var wire 1 Q" A $end
$var wire 1 R" B $end
$var wire 1 ]" out $end
$upscope $end
$scope module mux $end
$var wire 8 ^" I [7:0] $end
$var wire 3 _" S [2:0] $end
$var wire 1 U" out $end
$upscope $end
$scope module nandgate $end
$var wire 1 Q" A $end
$var wire 1 R" B $end
$var wire 1 `" out $end
$upscope $end
$scope module norgate $end
$var wire 1 Q" A $end
$var wire 1 R" B $end
$var wire 1 a" out $end
$upscope $end
$scope module orgate $end
$var wire 1 Q" A $end
$var wire 1 R" B $end
$var wire 1 b" out $end
$upscope $end
$scope module xorgate $end
$var wire 1 R" A $end
$var wire 1 c" B $end
$var wire 1 V" out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 Q" A $end
$var wire 1 R" B $end
$var wire 1 d" out $end
$upscope $end
$upscope $end
$scope module alu15 $end
$var wire 1 e" A $end
$var wire 1 f" B $end
$var wire 3 g" S [0:2] $end
$var wire 1 h" carryin $end
$var wire 1 i" out $end
$var wire 1 j" modB $end
$var wire 1 k" carryout $end
$var wire 1 l" addORsub $end
$var wire 8 m" I [7:0] $end
$scope module addsub $end
$var wire 1 e" A $end
$var wire 1 h" carryin $end
$var wire 1 k" carryout $end
$var wire 1 n" out1 $end
$var wire 1 o" out2 $end
$var wire 1 p" out3 $end
$var wire 1 l" sum $end
$var wire 1 j" B $end
$upscope $end
$scope module andgate $end
$var wire 1 e" A $end
$var wire 1 f" B $end
$var wire 1 q" out $end
$upscope $end
$scope module mux $end
$var wire 8 r" I [7:0] $end
$var wire 3 s" S [2:0] $end
$var wire 1 i" out $end
$upscope $end
$scope module nandgate $end
$var wire 1 e" A $end
$var wire 1 f" B $end
$var wire 1 t" out $end
$upscope $end
$scope module norgate $end
$var wire 1 e" A $end
$var wire 1 f" B $end
$var wire 1 u" out $end
$upscope $end
$scope module orgate $end
$var wire 1 e" A $end
$var wire 1 f" B $end
$var wire 1 v" out $end
$upscope $end
$scope module xorgate $end
$var wire 1 f" A $end
$var wire 1 w" B $end
$var wire 1 j" out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 e" A $end
$var wire 1 f" B $end
$var wire 1 x" out $end
$upscope $end
$upscope $end
$scope module alu16 $end
$var wire 1 y" A $end
$var wire 1 z" B $end
$var wire 3 {" S [0:2] $end
$var wire 1 |" carryin $end
$var wire 1 }" out $end
$var wire 1 ~" modB $end
$var wire 1 !# carryout $end
$var wire 1 "# addORsub $end
$var wire 8 ## I [7:0] $end
$scope module addsub $end
$var wire 1 y" A $end
$var wire 1 |" carryin $end
$var wire 1 !# carryout $end
$var wire 1 $# out1 $end
$var wire 1 %# out2 $end
$var wire 1 &# out3 $end
$var wire 1 "# sum $end
$var wire 1 ~" B $end
$upscope $end
$scope module andgate $end
$var wire 1 y" A $end
$var wire 1 z" B $end
$var wire 1 '# out $end
$upscope $end
$scope module mux $end
$var wire 8 (# I [7:0] $end
$var wire 3 )# S [2:0] $end
$var wire 1 }" out $end
$upscope $end
$scope module nandgate $end
$var wire 1 y" A $end
$var wire 1 z" B $end
$var wire 1 *# out $end
$upscope $end
$scope module norgate $end
$var wire 1 y" A $end
$var wire 1 z" B $end
$var wire 1 +# out $end
$upscope $end
$scope module orgate $end
$var wire 1 y" A $end
$var wire 1 z" B $end
$var wire 1 ,# out $end
$upscope $end
$scope module xorgate $end
$var wire 1 z" A $end
$var wire 1 -# B $end
$var wire 1 ~" out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 y" A $end
$var wire 1 z" B $end
$var wire 1 .# out $end
$upscope $end
$upscope $end
$scope module alu17 $end
$var wire 1 /# A $end
$var wire 1 0# B $end
$var wire 3 1# S [0:2] $end
$var wire 1 2# carryin $end
$var wire 1 3# out $end
$var wire 1 4# modB $end
$var wire 1 5# carryout $end
$var wire 1 6# addORsub $end
$var wire 8 7# I [7:0] $end
$scope module addsub $end
$var wire 1 /# A $end
$var wire 1 2# carryin $end
$var wire 1 5# carryout $end
$var wire 1 8# out1 $end
$var wire 1 9# out2 $end
$var wire 1 :# out3 $end
$var wire 1 6# sum $end
$var wire 1 4# B $end
$upscope $end
$scope module andgate $end
$var wire 1 /# A $end
$var wire 1 0# B $end
$var wire 1 ;# out $end
$upscope $end
$scope module mux $end
$var wire 8 <# I [7:0] $end
$var wire 3 =# S [2:0] $end
$var wire 1 3# out $end
$upscope $end
$scope module nandgate $end
$var wire 1 /# A $end
$var wire 1 0# B $end
$var wire 1 ># out $end
$upscope $end
$scope module norgate $end
$var wire 1 /# A $end
$var wire 1 0# B $end
$var wire 1 ?# out $end
$upscope $end
$scope module orgate $end
$var wire 1 /# A $end
$var wire 1 0# B $end
$var wire 1 @# out $end
$upscope $end
$scope module xorgate $end
$var wire 1 0# A $end
$var wire 1 A# B $end
$var wire 1 4# out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 /# A $end
$var wire 1 0# B $end
$var wire 1 B# out $end
$upscope $end
$upscope $end
$scope module alu18 $end
$var wire 1 C# A $end
$var wire 1 D# B $end
$var wire 3 E# S [0:2] $end
$var wire 1 F# carryin $end
$var wire 1 G# out $end
$var wire 1 H# modB $end
$var wire 1 I# carryout $end
$var wire 1 J# addORsub $end
$var wire 8 K# I [7:0] $end
$scope module addsub $end
$var wire 1 C# A $end
$var wire 1 F# carryin $end
$var wire 1 I# carryout $end
$var wire 1 L# out1 $end
$var wire 1 M# out2 $end
$var wire 1 N# out3 $end
$var wire 1 J# sum $end
$var wire 1 H# B $end
$upscope $end
$scope module andgate $end
$var wire 1 C# A $end
$var wire 1 D# B $end
$var wire 1 O# out $end
$upscope $end
$scope module mux $end
$var wire 8 P# I [7:0] $end
$var wire 3 Q# S [2:0] $end
$var wire 1 G# out $end
$upscope $end
$scope module nandgate $end
$var wire 1 C# A $end
$var wire 1 D# B $end
$var wire 1 R# out $end
$upscope $end
$scope module norgate $end
$var wire 1 C# A $end
$var wire 1 D# B $end
$var wire 1 S# out $end
$upscope $end
$scope module orgate $end
$var wire 1 C# A $end
$var wire 1 D# B $end
$var wire 1 T# out $end
$upscope $end
$scope module xorgate $end
$var wire 1 D# A $end
$var wire 1 U# B $end
$var wire 1 H# out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 C# A $end
$var wire 1 D# B $end
$var wire 1 V# out $end
$upscope $end
$upscope $end
$scope module alu19 $end
$var wire 1 W# A $end
$var wire 1 X# B $end
$var wire 3 Y# S [0:2] $end
$var wire 1 Z# carryin $end
$var wire 1 [# out $end
$var wire 1 \# modB $end
$var wire 1 ]# carryout $end
$var wire 1 ^# addORsub $end
$var wire 8 _# I [7:0] $end
$scope module addsub $end
$var wire 1 W# A $end
$var wire 1 Z# carryin $end
$var wire 1 ]# carryout $end
$var wire 1 `# out1 $end
$var wire 1 a# out2 $end
$var wire 1 b# out3 $end
$var wire 1 ^# sum $end
$var wire 1 \# B $end
$upscope $end
$scope module andgate $end
$var wire 1 W# A $end
$var wire 1 X# B $end
$var wire 1 c# out $end
$upscope $end
$scope module mux $end
$var wire 8 d# I [7:0] $end
$var wire 3 e# S [2:0] $end
$var wire 1 [# out $end
$upscope $end
$scope module nandgate $end
$var wire 1 W# A $end
$var wire 1 X# B $end
$var wire 1 f# out $end
$upscope $end
$scope module norgate $end
$var wire 1 W# A $end
$var wire 1 X# B $end
$var wire 1 g# out $end
$upscope $end
$scope module orgate $end
$var wire 1 W# A $end
$var wire 1 X# B $end
$var wire 1 h# out $end
$upscope $end
$scope module xorgate $end
$var wire 1 X# A $end
$var wire 1 i# B $end
$var wire 1 \# out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 W# A $end
$var wire 1 X# B $end
$var wire 1 j# out $end
$upscope $end
$upscope $end
$scope module alu2 $end
$var wire 1 k# A $end
$var wire 1 l# B $end
$var wire 3 m# S [0:2] $end
$var wire 1 n# carryin $end
$var wire 1 o# out $end
$var wire 1 p# modB $end
$var wire 1 q# carryout $end
$var wire 1 r# addORsub $end
$var wire 8 s# I [7:0] $end
$scope module addsub $end
$var wire 1 k# A $end
$var wire 1 n# carryin $end
$var wire 1 q# carryout $end
$var wire 1 t# out1 $end
$var wire 1 u# out2 $end
$var wire 1 v# out3 $end
$var wire 1 r# sum $end
$var wire 1 p# B $end
$upscope $end
$scope module andgate $end
$var wire 1 k# A $end
$var wire 1 l# B $end
$var wire 1 w# out $end
$upscope $end
$scope module mux $end
$var wire 8 x# I [7:0] $end
$var wire 3 y# S [2:0] $end
$var wire 1 o# out $end
$upscope $end
$scope module nandgate $end
$var wire 1 k# A $end
$var wire 1 l# B $end
$var wire 1 z# out $end
$upscope $end
$scope module norgate $end
$var wire 1 k# A $end
$var wire 1 l# B $end
$var wire 1 {# out $end
$upscope $end
$scope module orgate $end
$var wire 1 k# A $end
$var wire 1 l# B $end
$var wire 1 |# out $end
$upscope $end
$scope module xorgate $end
$var wire 1 l# A $end
$var wire 1 }# B $end
$var wire 1 p# out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 k# A $end
$var wire 1 l# B $end
$var wire 1 ~# out $end
$upscope $end
$upscope $end
$scope module alu20 $end
$var wire 1 !$ A $end
$var wire 1 "$ B $end
$var wire 3 #$ S [0:2] $end
$var wire 1 $$ carryin $end
$var wire 1 %$ out $end
$var wire 1 &$ modB $end
$var wire 1 '$ carryout $end
$var wire 1 ($ addORsub $end
$var wire 8 )$ I [7:0] $end
$scope module addsub $end
$var wire 1 !$ A $end
$var wire 1 $$ carryin $end
$var wire 1 '$ carryout $end
$var wire 1 *$ out1 $end
$var wire 1 +$ out2 $end
$var wire 1 ,$ out3 $end
$var wire 1 ($ sum $end
$var wire 1 &$ B $end
$upscope $end
$scope module andgate $end
$var wire 1 !$ A $end
$var wire 1 "$ B $end
$var wire 1 -$ out $end
$upscope $end
$scope module mux $end
$var wire 8 .$ I [7:0] $end
$var wire 3 /$ S [2:0] $end
$var wire 1 %$ out $end
$upscope $end
$scope module nandgate $end
$var wire 1 !$ A $end
$var wire 1 "$ B $end
$var wire 1 0$ out $end
$upscope $end
$scope module norgate $end
$var wire 1 !$ A $end
$var wire 1 "$ B $end
$var wire 1 1$ out $end
$upscope $end
$scope module orgate $end
$var wire 1 !$ A $end
$var wire 1 "$ B $end
$var wire 1 2$ out $end
$upscope $end
$scope module xorgate $end
$var wire 1 "$ A $end
$var wire 1 3$ B $end
$var wire 1 &$ out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 !$ A $end
$var wire 1 "$ B $end
$var wire 1 4$ out $end
$upscope $end
$upscope $end
$scope module alu21 $end
$var wire 1 5$ A $end
$var wire 1 6$ B $end
$var wire 3 7$ S [0:2] $end
$var wire 1 8$ carryin $end
$var wire 1 9$ out $end
$var wire 1 :$ modB $end
$var wire 1 ;$ carryout $end
$var wire 1 <$ addORsub $end
$var wire 8 =$ I [7:0] $end
$scope module addsub $end
$var wire 1 5$ A $end
$var wire 1 8$ carryin $end
$var wire 1 ;$ carryout $end
$var wire 1 >$ out1 $end
$var wire 1 ?$ out2 $end
$var wire 1 @$ out3 $end
$var wire 1 <$ sum $end
$var wire 1 :$ B $end
$upscope $end
$scope module andgate $end
$var wire 1 5$ A $end
$var wire 1 6$ B $end
$var wire 1 A$ out $end
$upscope $end
$scope module mux $end
$var wire 8 B$ I [7:0] $end
$var wire 3 C$ S [2:0] $end
$var wire 1 9$ out $end
$upscope $end
$scope module nandgate $end
$var wire 1 5$ A $end
$var wire 1 6$ B $end
$var wire 1 D$ out $end
$upscope $end
$scope module norgate $end
$var wire 1 5$ A $end
$var wire 1 6$ B $end
$var wire 1 E$ out $end
$upscope $end
$scope module orgate $end
$var wire 1 5$ A $end
$var wire 1 6$ B $end
$var wire 1 F$ out $end
$upscope $end
$scope module xorgate $end
$var wire 1 6$ A $end
$var wire 1 G$ B $end
$var wire 1 :$ out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 5$ A $end
$var wire 1 6$ B $end
$var wire 1 H$ out $end
$upscope $end
$upscope $end
$scope module alu22 $end
$var wire 1 I$ A $end
$var wire 1 J$ B $end
$var wire 3 K$ S [0:2] $end
$var wire 1 L$ carryin $end
$var wire 1 M$ out $end
$var wire 1 N$ modB $end
$var wire 1 O$ carryout $end
$var wire 1 P$ addORsub $end
$var wire 8 Q$ I [7:0] $end
$scope module addsub $end
$var wire 1 I$ A $end
$var wire 1 L$ carryin $end
$var wire 1 O$ carryout $end
$var wire 1 R$ out1 $end
$var wire 1 S$ out2 $end
$var wire 1 T$ out3 $end
$var wire 1 P$ sum $end
$var wire 1 N$ B $end
$upscope $end
$scope module andgate $end
$var wire 1 I$ A $end
$var wire 1 J$ B $end
$var wire 1 U$ out $end
$upscope $end
$scope module mux $end
$var wire 8 V$ I [7:0] $end
$var wire 3 W$ S [2:0] $end
$var wire 1 M$ out $end
$upscope $end
$scope module nandgate $end
$var wire 1 I$ A $end
$var wire 1 J$ B $end
$var wire 1 X$ out $end
$upscope $end
$scope module norgate $end
$var wire 1 I$ A $end
$var wire 1 J$ B $end
$var wire 1 Y$ out $end
$upscope $end
$scope module orgate $end
$var wire 1 I$ A $end
$var wire 1 J$ B $end
$var wire 1 Z$ out $end
$upscope $end
$scope module xorgate $end
$var wire 1 J$ A $end
$var wire 1 [$ B $end
$var wire 1 N$ out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 I$ A $end
$var wire 1 J$ B $end
$var wire 1 \$ out $end
$upscope $end
$upscope $end
$scope module alu23 $end
$var wire 1 ]$ A $end
$var wire 1 ^$ B $end
$var wire 3 _$ S [0:2] $end
$var wire 1 `$ carryin $end
$var wire 1 a$ out $end
$var wire 1 b$ modB $end
$var wire 1 c$ carryout $end
$var wire 1 d$ addORsub $end
$var wire 8 e$ I [7:0] $end
$scope module addsub $end
$var wire 1 ]$ A $end
$var wire 1 `$ carryin $end
$var wire 1 c$ carryout $end
$var wire 1 f$ out1 $end
$var wire 1 g$ out2 $end
$var wire 1 h$ out3 $end
$var wire 1 d$ sum $end
$var wire 1 b$ B $end
$upscope $end
$scope module andgate $end
$var wire 1 ]$ A $end
$var wire 1 ^$ B $end
$var wire 1 i$ out $end
$upscope $end
$scope module mux $end
$var wire 8 j$ I [7:0] $end
$var wire 3 k$ S [2:0] $end
$var wire 1 a$ out $end
$upscope $end
$scope module nandgate $end
$var wire 1 ]$ A $end
$var wire 1 ^$ B $end
$var wire 1 l$ out $end
$upscope $end
$scope module norgate $end
$var wire 1 ]$ A $end
$var wire 1 ^$ B $end
$var wire 1 m$ out $end
$upscope $end
$scope module orgate $end
$var wire 1 ]$ A $end
$var wire 1 ^$ B $end
$var wire 1 n$ out $end
$upscope $end
$scope module xorgate $end
$var wire 1 ^$ A $end
$var wire 1 o$ B $end
$var wire 1 b$ out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 ]$ A $end
$var wire 1 ^$ B $end
$var wire 1 p$ out $end
$upscope $end
$upscope $end
$scope module alu24 $end
$var wire 1 q$ A $end
$var wire 1 r$ B $end
$var wire 3 s$ S [0:2] $end
$var wire 1 t$ carryin $end
$var wire 1 u$ out $end
$var wire 1 v$ modB $end
$var wire 1 w$ carryout $end
$var wire 1 x$ addORsub $end
$var wire 8 y$ I [7:0] $end
$scope module addsub $end
$var wire 1 q$ A $end
$var wire 1 t$ carryin $end
$var wire 1 w$ carryout $end
$var wire 1 z$ out1 $end
$var wire 1 {$ out2 $end
$var wire 1 |$ out3 $end
$var wire 1 x$ sum $end
$var wire 1 v$ B $end
$upscope $end
$scope module andgate $end
$var wire 1 q$ A $end
$var wire 1 r$ B $end
$var wire 1 }$ out $end
$upscope $end
$scope module mux $end
$var wire 8 ~$ I [7:0] $end
$var wire 3 !% S [2:0] $end
$var wire 1 u$ out $end
$upscope $end
$scope module nandgate $end
$var wire 1 q$ A $end
$var wire 1 r$ B $end
$var wire 1 "% out $end
$upscope $end
$scope module norgate $end
$var wire 1 q$ A $end
$var wire 1 r$ B $end
$var wire 1 #% out $end
$upscope $end
$scope module orgate $end
$var wire 1 q$ A $end
$var wire 1 r$ B $end
$var wire 1 $% out $end
$upscope $end
$scope module xorgate $end
$var wire 1 r$ A $end
$var wire 1 %% B $end
$var wire 1 v$ out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 q$ A $end
$var wire 1 r$ B $end
$var wire 1 &% out $end
$upscope $end
$upscope $end
$scope module alu25 $end
$var wire 1 '% A $end
$var wire 1 (% B $end
$var wire 3 )% S [0:2] $end
$var wire 1 *% carryin $end
$var wire 1 +% out $end
$var wire 1 ,% modB $end
$var wire 1 -% carryout $end
$var wire 1 .% addORsub $end
$var wire 8 /% I [7:0] $end
$scope module addsub $end
$var wire 1 '% A $end
$var wire 1 *% carryin $end
$var wire 1 -% carryout $end
$var wire 1 0% out1 $end
$var wire 1 1% out2 $end
$var wire 1 2% out3 $end
$var wire 1 .% sum $end
$var wire 1 ,% B $end
$upscope $end
$scope module andgate $end
$var wire 1 '% A $end
$var wire 1 (% B $end
$var wire 1 3% out $end
$upscope $end
$scope module mux $end
$var wire 8 4% I [7:0] $end
$var wire 3 5% S [2:0] $end
$var wire 1 +% out $end
$upscope $end
$scope module nandgate $end
$var wire 1 '% A $end
$var wire 1 (% B $end
$var wire 1 6% out $end
$upscope $end
$scope module norgate $end
$var wire 1 '% A $end
$var wire 1 (% B $end
$var wire 1 7% out $end
$upscope $end
$scope module orgate $end
$var wire 1 '% A $end
$var wire 1 (% B $end
$var wire 1 8% out $end
$upscope $end
$scope module xorgate $end
$var wire 1 (% A $end
$var wire 1 9% B $end
$var wire 1 ,% out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 '% A $end
$var wire 1 (% B $end
$var wire 1 :% out $end
$upscope $end
$upscope $end
$scope module alu26 $end
$var wire 1 ;% A $end
$var wire 1 <% B $end
$var wire 3 =% S [0:2] $end
$var wire 1 >% carryin $end
$var wire 1 ?% out $end
$var wire 1 @% modB $end
$var wire 1 A% carryout $end
$var wire 1 B% addORsub $end
$var wire 8 C% I [7:0] $end
$scope module addsub $end
$var wire 1 ;% A $end
$var wire 1 >% carryin $end
$var wire 1 A% carryout $end
$var wire 1 D% out1 $end
$var wire 1 E% out2 $end
$var wire 1 F% out3 $end
$var wire 1 B% sum $end
$var wire 1 @% B $end
$upscope $end
$scope module andgate $end
$var wire 1 ;% A $end
$var wire 1 <% B $end
$var wire 1 G% out $end
$upscope $end
$scope module mux $end
$var wire 8 H% I [7:0] $end
$var wire 3 I% S [2:0] $end
$var wire 1 ?% out $end
$upscope $end
$scope module nandgate $end
$var wire 1 ;% A $end
$var wire 1 <% B $end
$var wire 1 J% out $end
$upscope $end
$scope module norgate $end
$var wire 1 ;% A $end
$var wire 1 <% B $end
$var wire 1 K% out $end
$upscope $end
$scope module orgate $end
$var wire 1 ;% A $end
$var wire 1 <% B $end
$var wire 1 L% out $end
$upscope $end
$scope module xorgate $end
$var wire 1 <% A $end
$var wire 1 M% B $end
$var wire 1 @% out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 ;% A $end
$var wire 1 <% B $end
$var wire 1 N% out $end
$upscope $end
$upscope $end
$scope module alu27 $end
$var wire 1 O% A $end
$var wire 1 P% B $end
$var wire 3 Q% S [0:2] $end
$var wire 1 R% carryin $end
$var wire 1 S% out $end
$var wire 1 T% modB $end
$var wire 1 U% carryout $end
$var wire 1 V% addORsub $end
$var wire 8 W% I [7:0] $end
$scope module addsub $end
$var wire 1 O% A $end
$var wire 1 R% carryin $end
$var wire 1 U% carryout $end
$var wire 1 X% out1 $end
$var wire 1 Y% out2 $end
$var wire 1 Z% out3 $end
$var wire 1 V% sum $end
$var wire 1 T% B $end
$upscope $end
$scope module andgate $end
$var wire 1 O% A $end
$var wire 1 P% B $end
$var wire 1 [% out $end
$upscope $end
$scope module mux $end
$var wire 8 \% I [7:0] $end
$var wire 3 ]% S [2:0] $end
$var wire 1 S% out $end
$upscope $end
$scope module nandgate $end
$var wire 1 O% A $end
$var wire 1 P% B $end
$var wire 1 ^% out $end
$upscope $end
$scope module norgate $end
$var wire 1 O% A $end
$var wire 1 P% B $end
$var wire 1 _% out $end
$upscope $end
$scope module orgate $end
$var wire 1 O% A $end
$var wire 1 P% B $end
$var wire 1 `% out $end
$upscope $end
$scope module xorgate $end
$var wire 1 P% A $end
$var wire 1 a% B $end
$var wire 1 T% out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 O% A $end
$var wire 1 P% B $end
$var wire 1 b% out $end
$upscope $end
$upscope $end
$scope module alu28 $end
$var wire 1 c% A $end
$var wire 1 d% B $end
$var wire 3 e% S [0:2] $end
$var wire 1 f% carryin $end
$var wire 1 g% out $end
$var wire 1 h% modB $end
$var wire 1 i% carryout $end
$var wire 1 j% addORsub $end
$var wire 8 k% I [7:0] $end
$scope module addsub $end
$var wire 1 c% A $end
$var wire 1 f% carryin $end
$var wire 1 i% carryout $end
$var wire 1 l% out1 $end
$var wire 1 m% out2 $end
$var wire 1 n% out3 $end
$var wire 1 j% sum $end
$var wire 1 h% B $end
$upscope $end
$scope module andgate $end
$var wire 1 c% A $end
$var wire 1 d% B $end
$var wire 1 o% out $end
$upscope $end
$scope module mux $end
$var wire 8 p% I [7:0] $end
$var wire 3 q% S [2:0] $end
$var wire 1 g% out $end
$upscope $end
$scope module nandgate $end
$var wire 1 c% A $end
$var wire 1 d% B $end
$var wire 1 r% out $end
$upscope $end
$scope module norgate $end
$var wire 1 c% A $end
$var wire 1 d% B $end
$var wire 1 s% out $end
$upscope $end
$scope module orgate $end
$var wire 1 c% A $end
$var wire 1 d% B $end
$var wire 1 t% out $end
$upscope $end
$scope module xorgate $end
$var wire 1 d% A $end
$var wire 1 u% B $end
$var wire 1 h% out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 c% A $end
$var wire 1 d% B $end
$var wire 1 v% out $end
$upscope $end
$upscope $end
$scope module alu29 $end
$var wire 1 w% A $end
$var wire 1 x% B $end
$var wire 3 y% S [0:2] $end
$var wire 1 z% carryin $end
$var wire 1 {% out $end
$var wire 1 |% modB $end
$var wire 1 }% carryout $end
$var wire 1 ~% addORsub $end
$var wire 8 !& I [7:0] $end
$scope module addsub $end
$var wire 1 w% A $end
$var wire 1 z% carryin $end
$var wire 1 }% carryout $end
$var wire 1 "& out1 $end
$var wire 1 #& out2 $end
$var wire 1 $& out3 $end
$var wire 1 ~% sum $end
$var wire 1 |% B $end
$upscope $end
$scope module andgate $end
$var wire 1 w% A $end
$var wire 1 x% B $end
$var wire 1 %& out $end
$upscope $end
$scope module mux $end
$var wire 8 && I [7:0] $end
$var wire 3 '& S [2:0] $end
$var wire 1 {% out $end
$upscope $end
$scope module nandgate $end
$var wire 1 w% A $end
$var wire 1 x% B $end
$var wire 1 (& out $end
$upscope $end
$scope module norgate $end
$var wire 1 w% A $end
$var wire 1 x% B $end
$var wire 1 )& out $end
$upscope $end
$scope module orgate $end
$var wire 1 w% A $end
$var wire 1 x% B $end
$var wire 1 *& out $end
$upscope $end
$scope module xorgate $end
$var wire 1 x% A $end
$var wire 1 +& B $end
$var wire 1 |% out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 w% A $end
$var wire 1 x% B $end
$var wire 1 ,& out $end
$upscope $end
$upscope $end
$scope module alu3 $end
$var wire 1 -& A $end
$var wire 1 .& B $end
$var wire 3 /& S [0:2] $end
$var wire 1 0& carryin $end
$var wire 1 1& out $end
$var wire 1 2& modB $end
$var wire 1 3& carryout $end
$var wire 1 4& addORsub $end
$var wire 8 5& I [7:0] $end
$scope module addsub $end
$var wire 1 -& A $end
$var wire 1 0& carryin $end
$var wire 1 3& carryout $end
$var wire 1 6& out1 $end
$var wire 1 7& out2 $end
$var wire 1 8& out3 $end
$var wire 1 4& sum $end
$var wire 1 2& B $end
$upscope $end
$scope module andgate $end
$var wire 1 -& A $end
$var wire 1 .& B $end
$var wire 1 9& out $end
$upscope $end
$scope module mux $end
$var wire 8 :& I [7:0] $end
$var wire 3 ;& S [2:0] $end
$var wire 1 1& out $end
$upscope $end
$scope module nandgate $end
$var wire 1 -& A $end
$var wire 1 .& B $end
$var wire 1 <& out $end
$upscope $end
$scope module norgate $end
$var wire 1 -& A $end
$var wire 1 .& B $end
$var wire 1 =& out $end
$upscope $end
$scope module orgate $end
$var wire 1 -& A $end
$var wire 1 .& B $end
$var wire 1 >& out $end
$upscope $end
$scope module xorgate $end
$var wire 1 .& A $end
$var wire 1 ?& B $end
$var wire 1 2& out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 -& A $end
$var wire 1 .& B $end
$var wire 1 @& out $end
$upscope $end
$upscope $end
$scope module alu30 $end
$var wire 1 A& A $end
$var wire 1 B& B $end
$var wire 3 C& S [0:2] $end
$var wire 1 D& carryin $end
$var wire 1 E& out $end
$var wire 1 F& modB $end
$var wire 1 G& carryout $end
$var wire 1 H& addORsub $end
$var wire 8 I& I [7:0] $end
$scope module addsub $end
$var wire 1 A& A $end
$var wire 1 D& carryin $end
$var wire 1 G& carryout $end
$var wire 1 J& out1 $end
$var wire 1 K& out2 $end
$var wire 1 L& out3 $end
$var wire 1 H& sum $end
$var wire 1 F& B $end
$upscope $end
$scope module andgate $end
$var wire 1 A& A $end
$var wire 1 B& B $end
$var wire 1 M& out $end
$upscope $end
$scope module mux $end
$var wire 8 N& I [7:0] $end
$var wire 3 O& S [2:0] $end
$var wire 1 E& out $end
$upscope $end
$scope module nandgate $end
$var wire 1 A& A $end
$var wire 1 B& B $end
$var wire 1 P& out $end
$upscope $end
$scope module norgate $end
$var wire 1 A& A $end
$var wire 1 B& B $end
$var wire 1 Q& out $end
$upscope $end
$scope module orgate $end
$var wire 1 A& A $end
$var wire 1 B& B $end
$var wire 1 R& out $end
$upscope $end
$scope module xorgate $end
$var wire 1 B& A $end
$var wire 1 S& B $end
$var wire 1 F& out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 A& A $end
$var wire 1 B& B $end
$var wire 1 T& out $end
$upscope $end
$upscope $end
$scope module alu31 $end
$var wire 1 U& A $end
$var wire 1 V& B $end
$var wire 3 W& S [0:2] $end
$var wire 1 X& carryin $end
$var wire 1 * zero $end
$var wire 1 , overflow $end
$var wire 1 Y& out $end
$var wire 1 Z& modB $end
$var wire 1 - carryout $end
$var wire 1 [& as $end
$var wire 1 4 SLT $end
$var wire 8 \& I [0:7] $end
$scope module addsub $end
$var wire 1 U& A $end
$var wire 1 X& carryin $end
$var wire 1 - carryout $end
$var wire 1 ]& out1 $end
$var wire 1 ^& out2 $end
$var wire 1 _& out3 $end
$var wire 1 [& sum $end
$var wire 1 Z& B $end
$upscope $end
$scope module andgate $end
$var wire 1 U& A $end
$var wire 1 V& B $end
$var wire 1 `& out $end
$upscope $end
$scope module elonMux $end
$var wire 8 a& I [7:0] $end
$var wire 3 b& S [2:0] $end
$var wire 1 Y& out $end
$upscope $end
$scope module nandgate $end
$var wire 1 U& A $end
$var wire 1 V& B $end
$var wire 1 c& out $end
$upscope $end
$scope module norgate $end
$var wire 1 U& A $end
$var wire 1 V& B $end
$var wire 1 d& out $end
$upscope $end
$scope module orgate $end
$var wire 1 U& A $end
$var wire 1 V& B $end
$var wire 1 e& out $end
$upscope $end
$scope module xorgate $end
$var wire 1 V& A $end
$var wire 1 f& B $end
$var wire 1 Z& out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 U& A $end
$var wire 1 V& B $end
$var wire 1 g& out $end
$upscope $end
$scope module xorgate2 $end
$var wire 1 X& A $end
$var wire 1 - B $end
$var wire 1 , out $end
$upscope $end
$scope module xorgate3 $end
$var wire 1 , A $end
$var wire 1 [& B $end
$var wire 1 4 out $end
$upscope $end
$upscope $end
$scope module alu4 $end
$var wire 1 h& A $end
$var wire 1 i& B $end
$var wire 3 j& S [0:2] $end
$var wire 1 k& carryin $end
$var wire 1 l& out $end
$var wire 1 m& modB $end
$var wire 1 n& carryout $end
$var wire 1 o& addORsub $end
$var wire 8 p& I [7:0] $end
$scope module addsub $end
$var wire 1 h& A $end
$var wire 1 k& carryin $end
$var wire 1 n& carryout $end
$var wire 1 q& out1 $end
$var wire 1 r& out2 $end
$var wire 1 s& out3 $end
$var wire 1 o& sum $end
$var wire 1 m& B $end
$upscope $end
$scope module andgate $end
$var wire 1 h& A $end
$var wire 1 i& B $end
$var wire 1 t& out $end
$upscope $end
$scope module mux $end
$var wire 8 u& I [7:0] $end
$var wire 3 v& S [2:0] $end
$var wire 1 l& out $end
$upscope $end
$scope module nandgate $end
$var wire 1 h& A $end
$var wire 1 i& B $end
$var wire 1 w& out $end
$upscope $end
$scope module norgate $end
$var wire 1 h& A $end
$var wire 1 i& B $end
$var wire 1 x& out $end
$upscope $end
$scope module orgate $end
$var wire 1 h& A $end
$var wire 1 i& B $end
$var wire 1 y& out $end
$upscope $end
$scope module xorgate $end
$var wire 1 i& A $end
$var wire 1 z& B $end
$var wire 1 m& out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 h& A $end
$var wire 1 i& B $end
$var wire 1 {& out $end
$upscope $end
$upscope $end
$scope module alu5 $end
$var wire 1 |& A $end
$var wire 1 }& B $end
$var wire 3 ~& S [0:2] $end
$var wire 1 !' carryin $end
$var wire 1 "' out $end
$var wire 1 #' modB $end
$var wire 1 $' carryout $end
$var wire 1 %' addORsub $end
$var wire 8 &' I [7:0] $end
$scope module addsub $end
$var wire 1 |& A $end
$var wire 1 !' carryin $end
$var wire 1 $' carryout $end
$var wire 1 '' out1 $end
$var wire 1 (' out2 $end
$var wire 1 )' out3 $end
$var wire 1 %' sum $end
$var wire 1 #' B $end
$upscope $end
$scope module andgate $end
$var wire 1 |& A $end
$var wire 1 }& B $end
$var wire 1 *' out $end
$upscope $end
$scope module mux $end
$var wire 8 +' I [7:0] $end
$var wire 3 ,' S [2:0] $end
$var wire 1 "' out $end
$upscope $end
$scope module nandgate $end
$var wire 1 |& A $end
$var wire 1 }& B $end
$var wire 1 -' out $end
$upscope $end
$scope module norgate $end
$var wire 1 |& A $end
$var wire 1 }& B $end
$var wire 1 .' out $end
$upscope $end
$scope module orgate $end
$var wire 1 |& A $end
$var wire 1 }& B $end
$var wire 1 /' out $end
$upscope $end
$scope module xorgate $end
$var wire 1 }& A $end
$var wire 1 0' B $end
$var wire 1 #' out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 |& A $end
$var wire 1 }& B $end
$var wire 1 1' out $end
$upscope $end
$upscope $end
$scope module alu6 $end
$var wire 1 2' A $end
$var wire 1 3' B $end
$var wire 3 4' S [0:2] $end
$var wire 1 5' carryin $end
$var wire 1 6' out $end
$var wire 1 7' modB $end
$var wire 1 8' carryout $end
$var wire 1 9' addORsub $end
$var wire 8 :' I [7:0] $end
$scope module addsub $end
$var wire 1 2' A $end
$var wire 1 5' carryin $end
$var wire 1 8' carryout $end
$var wire 1 ;' out1 $end
$var wire 1 <' out2 $end
$var wire 1 =' out3 $end
$var wire 1 9' sum $end
$var wire 1 7' B $end
$upscope $end
$scope module andgate $end
$var wire 1 2' A $end
$var wire 1 3' B $end
$var wire 1 >' out $end
$upscope $end
$scope module mux $end
$var wire 8 ?' I [7:0] $end
$var wire 3 @' S [2:0] $end
$var wire 1 6' out $end
$upscope $end
$scope module nandgate $end
$var wire 1 2' A $end
$var wire 1 3' B $end
$var wire 1 A' out $end
$upscope $end
$scope module norgate $end
$var wire 1 2' A $end
$var wire 1 3' B $end
$var wire 1 B' out $end
$upscope $end
$scope module orgate $end
$var wire 1 2' A $end
$var wire 1 3' B $end
$var wire 1 C' out $end
$upscope $end
$scope module xorgate $end
$var wire 1 3' A $end
$var wire 1 D' B $end
$var wire 1 7' out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 2' A $end
$var wire 1 3' B $end
$var wire 1 E' out $end
$upscope $end
$upscope $end
$scope module alu7 $end
$var wire 1 F' A $end
$var wire 1 G' B $end
$var wire 3 H' S [0:2] $end
$var wire 1 I' carryin $end
$var wire 1 J' out $end
$var wire 1 K' modB $end
$var wire 1 L' carryout $end
$var wire 1 M' addORsub $end
$var wire 8 N' I [7:0] $end
$scope module addsub $end
$var wire 1 F' A $end
$var wire 1 I' carryin $end
$var wire 1 L' carryout $end
$var wire 1 O' out1 $end
$var wire 1 P' out2 $end
$var wire 1 Q' out3 $end
$var wire 1 M' sum $end
$var wire 1 K' B $end
$upscope $end
$scope module andgate $end
$var wire 1 F' A $end
$var wire 1 G' B $end
$var wire 1 R' out $end
$upscope $end
$scope module mux $end
$var wire 8 S' I [7:0] $end
$var wire 3 T' S [2:0] $end
$var wire 1 J' out $end
$upscope $end
$scope module nandgate $end
$var wire 1 F' A $end
$var wire 1 G' B $end
$var wire 1 U' out $end
$upscope $end
$scope module norgate $end
$var wire 1 F' A $end
$var wire 1 G' B $end
$var wire 1 V' out $end
$upscope $end
$scope module orgate $end
$var wire 1 F' A $end
$var wire 1 G' B $end
$var wire 1 W' out $end
$upscope $end
$scope module xorgate $end
$var wire 1 G' A $end
$var wire 1 X' B $end
$var wire 1 K' out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 F' A $end
$var wire 1 G' B $end
$var wire 1 Y' out $end
$upscope $end
$upscope $end
$scope module alu8 $end
$var wire 1 Z' A $end
$var wire 1 [' B $end
$var wire 3 \' S [0:2] $end
$var wire 1 ]' carryin $end
$var wire 1 ^' out $end
$var wire 1 _' modB $end
$var wire 1 `' carryout $end
$var wire 1 a' addORsub $end
$var wire 8 b' I [7:0] $end
$scope module addsub $end
$var wire 1 Z' A $end
$var wire 1 ]' carryin $end
$var wire 1 `' carryout $end
$var wire 1 c' out1 $end
$var wire 1 d' out2 $end
$var wire 1 e' out3 $end
$var wire 1 a' sum $end
$var wire 1 _' B $end
$upscope $end
$scope module andgate $end
$var wire 1 Z' A $end
$var wire 1 [' B $end
$var wire 1 f' out $end
$upscope $end
$scope module mux $end
$var wire 8 g' I [7:0] $end
$var wire 3 h' S [2:0] $end
$var wire 1 ^' out $end
$upscope $end
$scope module nandgate $end
$var wire 1 Z' A $end
$var wire 1 [' B $end
$var wire 1 i' out $end
$upscope $end
$scope module norgate $end
$var wire 1 Z' A $end
$var wire 1 [' B $end
$var wire 1 j' out $end
$upscope $end
$scope module orgate $end
$var wire 1 Z' A $end
$var wire 1 [' B $end
$var wire 1 k' out $end
$upscope $end
$scope module xorgate $end
$var wire 1 [' A $end
$var wire 1 l' B $end
$var wire 1 _' out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 Z' A $end
$var wire 1 [' B $end
$var wire 1 m' out $end
$upscope $end
$upscope $end
$scope module alu9 $end
$var wire 1 n' A $end
$var wire 1 o' B $end
$var wire 3 p' S [0:2] $end
$var wire 1 q' carryin $end
$var wire 1 r' out $end
$var wire 1 s' modB $end
$var wire 1 t' carryout $end
$var wire 1 u' addORsub $end
$var wire 8 v' I [7:0] $end
$scope module addsub $end
$var wire 1 n' A $end
$var wire 1 q' carryin $end
$var wire 1 t' carryout $end
$var wire 1 w' out1 $end
$var wire 1 x' out2 $end
$var wire 1 y' out3 $end
$var wire 1 u' sum $end
$var wire 1 s' B $end
$upscope $end
$scope module andgate $end
$var wire 1 n' A $end
$var wire 1 o' B $end
$var wire 1 z' out $end
$upscope $end
$scope module mux $end
$var wire 8 {' I [7:0] $end
$var wire 3 |' S [2:0] $end
$var wire 1 r' out $end
$upscope $end
$scope module nandgate $end
$var wire 1 n' A $end
$var wire 1 o' B $end
$var wire 1 }' out $end
$upscope $end
$scope module norgate $end
$var wire 1 n' A $end
$var wire 1 o' B $end
$var wire 1 ~' out $end
$upscope $end
$scope module orgate $end
$var wire 1 n' A $end
$var wire 1 o' B $end
$var wire 1 !( out $end
$upscope $end
$scope module xorgate $end
$var wire 1 o' A $end
$var wire 1 "( B $end
$var wire 1 s' out $end
$upscope $end
$scope module xorgate1 $end
$var wire 1 n' A $end
$var wire 1 o' B $end
$var wire 1 #( out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x#(
1"(
x!(
x~'
x}'
b100 |'
bx0xxx {'
xz'
xy'
xx'
xw'
bx0xxx v'
xu'
xt'
xs'
xr'
xq'
b100 p'
1o'
1n'
xm'
1l'
xk'
xj'
xi'
b100 h'
bx0xxx g'
xf'
xe'
xd'
xc'
bx0xxx b'
xa'
x`'
x_'
x^'
x]'
b100 \'
0['
1Z'
xY'
1X'
xW'
xV'
xU'
b100 T'
bx0xxx S'
xR'
xQ'
xP'
xO'
bx0xxx N'
xM'
xL'
xK'
xJ'
xI'
b100 H'
1G'
1F'
xE'
1D'
xC'
xB'
xA'
b100 @'
bx0xxx ?'
x>'
x='
x<'
x;'
bx0xxx :'
x9'
x8'
x7'
x6'
x5'
b100 4'
03'
12'
x1'
10'
x/'
x.'
x-'
b100 ,'
bx0xxx +'
x*'
x)'
x('
x''
bx0xxx &'
x%'
x$'
x#'
x"'
x!'
b100 ~&
1}&
1|&
x{&
1z&
xy&
xx&
xw&
b100 v&
bx0xxx u&
xt&
xs&
xr&
xq&
bx0xxx p&
xo&
xn&
xm&
xl&
xk&
b100 j&
0i&
1h&
xg&
1f&
xe&
xd&
xc&
b100 b&
bx0xxxx a&
x`&
x_&
x^&
x]&
bx0xxxx \&
x[&
xZ&
0Y&
xX&
b100 W&
1V&
1U&
xT&
1S&
xR&
xQ&
xP&
b100 O&
bx0xxx N&
xM&
xL&
xK&
xJ&
bx0xxx I&
xH&
xG&
xF&
xE&
xD&
b100 C&
0B&
1A&
x@&
1?&
x>&
x=&
x<&
b100 ;&
bx0xxx :&
x9&
x8&
x7&
x6&
bx0xxx 5&
x4&
x3&
x2&
x1&
x0&
b100 /&
1.&
1-&
x,&
1+&
x*&
x)&
x(&
b100 '&
bx0xxx &&
x%&
x$&
x#&
x"&
bx0xxx !&
x~%
x}%
x|%
x{%
xz%
b100 y%
1x%
1w%
xv%
1u%
xt%
xs%
xr%
b100 q%
bx0xxx p%
xo%
xn%
xm%
xl%
bx0xxx k%
xj%
xi%
xh%
xg%
xf%
b100 e%
0d%
1c%
xb%
1a%
x`%
x_%
x^%
b100 ]%
bx0xxx \%
x[%
xZ%
xY%
xX%
bx0xxx W%
xV%
xU%
xT%
xS%
xR%
b100 Q%
1P%
1O%
xN%
1M%
xL%
xK%
xJ%
b100 I%
bx0xxx H%
xG%
xF%
xE%
xD%
bx0xxx C%
xB%
xA%
x@%
x?%
x>%
b100 =%
0<%
1;%
x:%
19%
x8%
x7%
x6%
b100 5%
bx0xxx 4%
x3%
x2%
x1%
x0%
bx0xxx /%
x.%
x-%
x,%
x+%
x*%
b100 )%
1(%
1'%
x&%
1%%
x$%
x#%
x"%
b100 !%
bx0xxx ~$
x}$
x|$
x{$
xz$
bx0xxx y$
xx$
xw$
xv$
xu$
xt$
b100 s$
0r$
1q$
xp$
1o$
xn$
xm$
xl$
b100 k$
bx0xxx j$
xi$
xh$
xg$
xf$
bx0xxx e$
xd$
xc$
xb$
xa$
x`$
b100 _$
1^$
1]$
x\$
1[$
xZ$
xY$
xX$
b100 W$
bx0xxx V$
xU$
xT$
xS$
xR$
bx0xxx Q$
xP$
xO$
xN$
xM$
xL$
b100 K$
0J$
1I$
xH$
1G$
xF$
xE$
xD$
b100 C$
bx0xxx B$
xA$
x@$
x?$
x>$
bx0xxx =$
x<$
x;$
x:$
x9$
x8$
b100 7$
16$
15$
x4$
13$
x2$
x1$
x0$
b100 /$
bx0xxx .$
x-$
x,$
x+$
x*$
bx0xxx )$
x($
x'$
x&$
x%$
x$$
b100 #$
0"$
1!$
x~#
1}#
x|#
x{#
xz#
b100 y#
bx0xxx x#
xw#
xv#
xu#
xt#
bx0xxx s#
xr#
xq#
xp#
xo#
xn#
b100 m#
0l#
1k#
xj#
1i#
xh#
xg#
xf#
b100 e#
bx0xxx d#
xc#
xb#
xa#
x`#
bx0xxx _#
x^#
x]#
x\#
x[#
xZ#
b100 Y#
1X#
1W#
xV#
1U#
xT#
xS#
xR#
b100 Q#
bx0xxx P#
xO#
xN#
xM#
xL#
bx0xxx K#
xJ#
xI#
xH#
xG#
xF#
b100 E#
0D#
1C#
xB#
1A#
x@#
x?#
x>#
b100 =#
bx0xxx <#
x;#
x:#
x9#
x8#
bx0xxx 7#
x6#
x5#
x4#
x3#
x2#
b100 1#
10#
1/#
x.#
1-#
x,#
x+#
x*#
b100 )#
bx0xxx (#
x'#
x&#
x%#
x$#
bx0xxx ##
x"#
x!#
x~"
x}"
x|"
b100 {"
0z"
1y"
xx"
1w"
xv"
xu"
xt"
b100 s"
bx0xxx r"
xq"
xp"
xo"
xn"
bx0xxx m"
xl"
xk"
xj"
xi"
xh"
b100 g"
1f"
1e"
xd"
1c"
xb"
xa"
x`"
b100 _"
bx0xxx ^"
x]"
x\"
x["
xZ"
bx0xxx Y"
xX"
xW"
xV"
xU"
xT"
b100 S"
0R"
1Q"
xP"
1O"
xN"
xM"
xL"
b100 K"
bx0xxx J"
xI"
xH"
xG"
xF"
bx0xxx E"
xD"
xC"
xB"
xA"
x@"
b100 ?"
1>"
1="
x<"
1;"
x:"
x9"
x8"
b100 7"
bx0xxx 6"
x5"
x4"
x3"
x2"
bx0xxx 1"
x0"
x/"
x."
x-"
x,"
b100 +"
0*"
1)"
x("
1'"
x&"
x%"
x$"
b100 #"
bx0xxx ""
x!"
x~
x}
x|
bx0xxx {
xz
xy
xx
xw
xv
b100 u
1t
1s
xr
1q
xp
xo
xn
b100 m
bx0xxx l
xk
xj
xi
xh
bx0xxx g
xf
xe
xd
xc
xb
b100 a
0`
1_
x^
1]
x\
x[
xZ
b100 Y
bx0xxx X
xW
xV
xU
xT
bx0xxx S
xR
xQ
xP
xO
xN
b100 M
1L
1K
xJ
1I
xH
xG
xF
b100 E
bx0xxx D
xC
xB
xA
x@
bx0xxx ?
x>
x=
x<
x;
0:
b100 9
08
17
bx 6
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 5
x4
b100 3
b10101010101010101010101010101010 2
b11111111111111111111111111111111 1
b100 0
b10101010101010101010101010101010 /
b11111111111111111111111111111111 .
x-
x,
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx +
z*
x)
x(
x'
x&
x%
x$
z#
z"
z!
$end
#10000
bx01xx ?
bx01xx D
1J
bx00xx S
bx00xx X
0^
bx01xx s#
bx01xx x#
1~#
bx00xx 5&
bx00xx :&
0@&
bx01xx p&
bx01xx u&
1{&
bx00xx &'
bx00xx +'
01'
bx01xx :'
bx01xx ?'
1E'
bx00xx N'
bx00xx S'
0Y'
bx01xx b'
bx01xx g'
1m'
bx00xx v'
bx00xx {'
0#(
bx01xx g
bx01xx l
1r
bx00xx {
bx00xx ""
0("
bx01xx 1"
bx01xx 6"
1<"
bx00xx E"
bx00xx J"
0P"
bx01xx Y"
bx01xx ^"
1d"
bx00xx m"
bx00xx r"
0x"
bx01xx ##
bx01xx (#
1.#
bx00xx 7#
bx00xx <#
0B#
bx01xx K#
bx01xx P#
1V#
bx00xx _#
bx00xx d#
0j#
bx01xx )$
bx01xx .$
14$
bx00xx =$
bx00xx B$
0H$
bx01xx Q$
bx01xx V$
1\$
bx00xx e$
bx00xx j$
0p$
bx01xx y$
bx01xx ~$
1&%
bx00xx /%
bx00xx 4%
0:%
bx01xx C%
bx01xx H%
1N%
bx00xx W%
bx00xx \%
0b%
bx01xx k%
bx01xx p%
1v%
bx00xx !&
bx00xx &&
0,&
bx01xx I&
bx01xx N&
1T&
bx00xxxx \&
bx00xxxx a&
0g&
1<
0P
1d
0x
1."
0B"
1V"
0j"
1~"
04#
1H#
0\#
1p#
1&$
0:$
1N$
0b$
1v$
0,%
1@%
0T%
1h%
0|%
02&
1F&
0Z&
1m&
0#'
17'
0K'
1_'
0s'
#20000
1F
bx01x01xx ?
bx01x01xx D
0G
0Z
bx00x00xx S
bx00x00xx X
0[
1z#
bx01x01xx s#
bx01x01xx x#
0{#
0<&
bx00x00xx 5&
bx00x00xx :&
0=&
1w&
bx01x01xx p&
bx01x01xx u&
0x&
0-'
bx00x00xx &'
bx00x00xx +'
0.'
1A'
bx01x01xx :'
bx01x01xx ?'
0B'
0U'
bx00x00xx N'
bx00x00xx S'
0V'
1i'
bx01x01xx b'
bx01x01xx g'
0j'
0}'
bx00x00xx v'
bx00x00xx {'
0~'
1n
bx01x01xx g
bx01x01xx l
0o
0$"
bx00x00xx {
bx00x00xx ""
0%"
18"
bx01x01xx 1"
bx01x01xx 6"
09"
0L"
bx00x00xx E"
bx00x00xx J"
0M"
1`"
bx01x01xx Y"
bx01x01xx ^"
0a"
0t"
bx00x00xx m"
bx00x00xx r"
0u"
1*#
bx01x01xx ##
bx01x01xx (#
0+#
0>#
bx00x00xx 7#
bx00x00xx <#
0?#
1R#
bx01x01xx K#
bx01x01xx P#
0S#
0f#
bx00x00xx _#
bx00x00xx d#
0g#
10$
bx01x01xx )$
bx01x01xx .$
01$
0D$
bx00x00xx =$
bx00x00xx B$
0E$
1X$
bx01x01xx Q$
bx01x01xx V$
0Y$
0l$
bx00x00xx e$
bx00x00xx j$
0m$
1"%
bx01x01xx y$
bx01x01xx ~$
0#%
06%
bx00x00xx /%
bx00x00xx 4%
07%
1J%
bx01x01xx C%
bx01x01xx H%
0K%
0^%
bx00x00xx W%
bx00x00xx \%
0_%
1r%
bx01x01xx k%
bx01x01xx p%
0s%
0(&
bx00x00xx !&
bx00x00xx &&
0)&
1P&
bx01x01xx I&
bx01x01xx N&
0Q&
0c&
bx00x00x \&
bx00x00x a&
0d&
#30000
0;
0C
b101001xx ?
b101001xx D
1H
1O
1W
b100100xx S
b100100xx X
1\
0o#
0w#
b101001xx s#
b101001xx x#
1|#
11&
19&
b100100xx 5&
b100100xx :&
1>&
0l&
0t&
b101001xx p&
b101001xx u&
1y&
1"'
1*'
b100100xx &'
b100100xx +'
1/'
06'
0>'
b101001xx :'
b101001xx ?'
1C'
1J'
1R'
b100100xx N'
b100100xx S'
1W'
0^'
0f'
b101001xx b'
b101001xx g'
1k'
1r'
1z'
b100100xx v'
b100100xx {'
1!(
0c
0k
b101001xx g
b101001xx l
1p
1w
1!"
b100100xx {
b100100xx ""
1&"
0-"
05"
b101001xx 1"
b101001xx 6"
1:"
1A"
1I"
b100100xx E"
b100100xx J"
1N"
0U"
0]"
b101001xx Y"
b101001xx ^"
1b"
1i"
1q"
b100100xx m"
b100100xx r"
1v"
0}"
0'#
b101001xx ##
b101001xx (#
1,#
13#
1;#
b100100xx 7#
b100100xx <#
1@#
0G#
0O#
b101001xx K#
b101001xx P#
1T#
1[#
1c#
b100100xx _#
b100100xx d#
1h#
0%$
0-$
b101001xx )$
b101001xx .$
12$
19$
1A$
b100100xx =$
b100100xx B$
1F$
0M$
0U$
b101001xx Q$
b101001xx V$
1Z$
1a$
1i$
b100100xx e$
b100100xx j$
1n$
0u$
0}$
b101001xx y$
b101001xx ~$
1$%
1+%
13%
b100100xx /%
b100100xx 4%
18%
0?%
0G%
b101001xx C%
b101001xx H%
1L%
1S%
1[%
b100100xx W%
b100100xx \%
1`%
0g%
0o%
b101001xx k%
b101001xx p%
1t%
1{%
1%&
b100100xx !&
b100100xx &&
1*&
b101010101010101010101010101010 +
b101010101010101010101010101010 5
0E&
0M&
b101001xx I&
b101001xx N&
1R&
1`&
bx001001 \&
bx001001 a&
1e&
0A
#40000
1B
0@
0V
1T
1j
0h
0~
1|
14"
02"
0H"
1F"
1\"
0Z"
0p"
1n"
1&#
0$#
0:#
18#
1N#
0L#
0b#
1`#
1v#
0t#
1,$
0*$
0@$
1>$
1T$
0R$
0h$
1f$
1|$
0z$
02%
10%
1F%
0D%
0Z%
1X%
1n%
0l%
0$&
1"&
08&
16&
1L&
0J&
0_&
1]&
1s&
0q&
0)'
1''
1='
0;'
0Q'
1O'
1e'
0c'
0y'
1w'
#70000
1N
1v
1@"
1h"
12#
1Z#
10&
18$
1`$
1*%
1R%
1z%
1X&
1!'
1I'
1q'
1=
b10100100 ?
b10100100 D
0>
1e
0i
1/"
03"
1W"
0["
1!#
0%#
1I#
0M#
1q#
0u#
1'$
0+$
1O$
0S$
1w$
0{$
1A%
0E%
1i%
0m%
1G&
0K&
1n&
0r&
18'
0<'
b1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1 6
1`'
0d'
#100000
b10010000 S
b10010000 X
0R
1U
b10010000 {
b10010000 ""
0z
1}
b10010000 E"
b10010000 J"
0D"
1G"
b10010000 m"
b10010000 r"
0l"
1o"
b10010000 7#
b10010000 <#
06#
19#
b10010000 _#
b10010000 d#
0^#
1a#
b10010000 5&
b10010000 :&
04&
17&
b10010000 =$
b10010000 B$
0<$
1?$
b10010000 e$
b10010000 j$
0d$
1g$
b10010000 /%
b10010000 4%
0.%
11%
b10010000 W%
b10010000 \%
0V%
1Y%
b10010000 !&
b10010000 &&
0~%
1#&
b1001 \&
b1001 a&
0[&
1^&
b10010000 &'
b10010000 +'
0%'
1('
b10010000 N'
b10010000 S'
0M'
1P'
b10010000 v'
b10010000 {'
0u'
1x'
#130000
1n#
1,"
1T"
1|"
1F#
1$$
1k&
1L$
1t$
1>%
1f%
1D&
15'
1]'
1b
1Q
1y
1C"
1k"
15#
1]#
13&
1;$
1c$
1-%
1U%
1}%
1-
1$'
1L'
b1111111111111111111111111111111 6
1t'
#140000
0,
#150000
04
#160000
b10100111 s#
b10100111 x#
1r#
b10100111 1"
b10100111 6"
10"
b10100111 Y"
b10100111 ^"
1X"
b10100111 ##
b10100111 (#
1"#
b10100111 K#
b10100111 P#
1J#
b10100111 )$
b10100111 .$
1($
b10100111 p&
b10100111 u&
1o&
b10100111 Q$
b10100111 V$
1P$
b10100111 y$
b10100111 ~$
1x$
b10100111 C%
b10100111 H%
1B%
b10100111 k%
b10100111 p%
1j%
b10100111 I&
b10100111 N&
1H&
b10100111 :'
b10100111 ?'
19'
b10100111 b'
b10100111 g'
1a'
b10100111 g
b10100111 l
1f
#100000000
